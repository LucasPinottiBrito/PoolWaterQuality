import { IotHub } from "../operationsInterfaces";
import { IotHubClient } from "../iotHubClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { FailoverInput, IotHubManualFailoverOptionalParams } from "../models";
/** Class containing IotHub operations. */
export declare class IotHubImpl implements IotHub {
    private readonly client;
    /**
     * Initialize a new instance of the class IotHub class.
     * @param client Reference to the service client
     */
    constructor(client: IotHubClient);
    /**
     * Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see
     * https://aka.ms/manualfailover
     * @param iotHubName Name of the IoT hub to failover
     * @param resourceGroupName Name of the resource group containing the IoT hub resource
     * @param failoverInput Region to failover to. Must be the Azure paired region. Get the value from the
     *                      secondary location in the locations property. To learn more, see
     *                      https://aka.ms/manualfailover/region
     * @param options The options parameters.
     */
    beginManualFailover(iotHubName: string, resourceGroupName: string, failoverInput: FailoverInput, options?: IotHubManualFailoverOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see
     * https://aka.ms/manualfailover
     * @param iotHubName Name of the IoT hub to failover
     * @param resourceGroupName Name of the resource group containing the IoT hub resource
     * @param failoverInput Region to failover to. Must be the Azure paired region. Get the value from the
     *                      secondary location in the locations property. To learn more, see
     *                      https://aka.ms/manualfailover/region
     * @param options The options parameters.
     */
    beginManualFailoverAndWait(iotHubName: string, resourceGroupName: string, failoverInput: FailoverInput, options?: IotHubManualFailoverOptionalParams): Promise<void>;
}
//# sourceMappingURL=iotHub.d.ts.map