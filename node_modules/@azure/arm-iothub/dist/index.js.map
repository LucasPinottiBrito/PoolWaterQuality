{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/lroImpl.ts","../src/operations/iotHubResource.ts","../src/operations/resourceProviderCommon.ts","../src/operations/certificates.ts","../src/operations/iotHub.ts","../src/operations/privateLinkResourcesOperations.ts","../src/operations/privateEndpointConnections.ts","../src/iotHubClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Result of the request to list IoT Hub operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /**\n   * List of IoT Hub operations supported by the Microsoft.Devices resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Operation[];\n  /**\n   * URL to get the next set of operation list results if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** IoT Hub REST API operation */\nexport interface Operation {\n  /**\n   * Operation name: {provider}/{resource}/{read | write | action | delete}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft Devices\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * Resource Type: IotHubs\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * Name of the operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * Description of the operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/** Error details. */\nexport interface ErrorDetails {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The HTTP status code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly httpStatusCode?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: string;\n}\n\n/** The properties of an IoT hub. */\nexport interface IotHubProperties {\n  /** The shared access policies you can use to secure a connection to the IoT hub. */\n  authorizationPolicies?: SharedAccessSignatureAuthorizationRule[];\n  /** If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication. */\n  disableLocalAuth?: boolean;\n  /** If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication. */\n  disableDeviceSAS?: boolean;\n  /** If true, all module scoped SAS keys cannot be used for authentication. */\n  disableModuleSAS?: boolean;\n  /** If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList. */\n  restrictOutboundNetworkAccess?: boolean;\n  /** List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub. */\n  allowedFqdnList?: string[];\n  /** Whether requests from Public Network are allowed */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** The IP filter rules. */\n  ipFilterRules?: IpFilterRule[];\n  /** Network Rule Set Properties of IotHub */\n  networkRuleSets?: NetworkRuleSetProperties;\n  /** Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected. */\n  minTlsVersion?: string;\n  /** Private endpoint connections created on this IotHub */\n  privateEndpointConnections?: PrivateEndpointConnection[];\n  /**\n   * The provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The hub state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n  /**\n   * The name of the host.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostName?: string;\n  /** The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub. */\n  eventHubEndpoints?: { [propertyName: string]: EventHubProperties };\n  /** The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging */\n  routing?: RoutingProperties;\n  /** The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown. */\n  storageEndpoints?: { [propertyName: string]: StorageEndpointProperties };\n  /** The messaging endpoint properties for the file upload notification queue. */\n  messagingEndpoints?: { [propertyName: string]: MessagingEndpointProperties };\n  /** If True, file upload notifications are enabled. */\n  enableFileUploadNotifications?: boolean;\n  /** The IoT hub cloud-to-device messaging properties. */\n  cloudToDevice?: CloudToDeviceProperties;\n  /** IoT hub comments. */\n  comments?: string;\n  /** The capabilities and features enabled for the IoT hub. */\n  features?: Capabilities;\n  /**\n   * Primary and secondary location for iot hub\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locations?: IotHubLocationDescription[];\n  /** This property when set to true, will enable data residency, thus, disabling disaster recovery. */\n  enableDataResidency?: boolean;\n}\n\n/** The properties of an IoT hub shared access policy. */\nexport interface SharedAccessSignatureAuthorizationRule {\n  /** The name of the shared access policy. */\n  keyName: string;\n  /** The primary key. */\n  primaryKey?: string;\n  /** The secondary key. */\n  secondaryKey?: string;\n  /** The permissions assigned to the shared access policy. */\n  rights: AccessRights;\n}\n\n/** The IP filter rules for the IoT hub. */\nexport interface IpFilterRule {\n  /** The name of the IP filter rule. */\n  filterName: string;\n  /** The desired action for requests captured by this rule. */\n  action: IpFilterActionType;\n  /** A string that contains the IP address range in CIDR notation for the rule. */\n  ipMask: string;\n}\n\n/** Network Rule Set Properties of IotHub */\nexport interface NetworkRuleSetProperties {\n  /** Default Action for Network Rule Set */\n  defaultAction?: DefaultAction;\n  /** If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub */\n  applyToBuiltInEventHubEndpoint: boolean;\n  /** List of IP Rules */\n  ipRules: NetworkRuleSetIpRule[];\n}\n\n/** IP Rule to be applied as part of Network Rule Set */\nexport interface NetworkRuleSetIpRule {\n  /** Name of the IP filter rule. */\n  filterName: string;\n  /** IP Filter Action */\n  action?: NetworkRuleIPAction;\n  /** A string that contains the IP address range in CIDR notation for the rule. */\n  ipMask: string;\n}\n\n/** The private endpoint connection of an IotHub */\nexport interface PrivateEndpointConnection {\n  /**\n   * The resource identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The properties of a private endpoint connection */\n  properties: PrivateEndpointConnectionProperties;\n}\n\n/** The properties of a private endpoint connection */\nexport interface PrivateEndpointConnectionProperties {\n  /** The private endpoint property of a private endpoint connection */\n  privateEndpoint?: PrivateEndpoint;\n  /** The current state of a private endpoint connection */\n  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;\n}\n\n/** The private endpoint property of a private endpoint connection */\nexport interface PrivateEndpoint {\n  /**\n   * The resource identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** The current state of a private endpoint connection */\nexport interface PrivateLinkServiceConnectionState {\n  /** The status of a private endpoint connection */\n  status: PrivateLinkServiceConnectionStatus;\n  /** The description for the current state of a private endpoint connection */\n  description: string;\n  /** Actions required for a private endpoint connection */\n  actionsRequired?: string;\n}\n\n/** The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub. */\nexport interface EventHubProperties {\n  /** The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages */\n  retentionTimeInDays?: number;\n  /** The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages. */\n  partitionCount?: number;\n  /**\n   * The partition ids in the Event Hub-compatible endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partitionIds?: string[];\n  /**\n   * The Event Hub-compatible name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly path?: string;\n  /**\n   * The Event Hub-compatible endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endpoint?: string;\n}\n\n/** The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging */\nexport interface RoutingProperties {\n  /** The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs. */\n  endpoints?: RoutingEndpoints;\n  /** The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs. */\n  routes?: RouteProperties[];\n  /** The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint. */\n  fallbackRoute?: FallbackRouteProperties;\n  /** The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid */\n  enrichments?: EnrichmentProperties[];\n}\n\n/** The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs. */\nexport interface RoutingEndpoints {\n  /** The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules. */\n  serviceBusQueues?: RoutingServiceBusQueueEndpointProperties[];\n  /** The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules. */\n  serviceBusTopics?: RoutingServiceBusTopicEndpointProperties[];\n  /** The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint. */\n  eventHubs?: RoutingEventHubProperties[];\n  /** The list of storage container endpoints that IoT hub routes messages to, based on the routing rules. */\n  storageContainers?: RoutingStorageContainerProperties[];\n}\n\n/** The properties related to service bus queue endpoint types. */\nexport interface RoutingServiceBusQueueEndpointProperties {\n  /** Id of the service bus queue endpoint */\n  id?: string;\n  /** The connection string of the service bus queue endpoint. */\n  connectionString?: string;\n  /** The url of the service bus queue endpoint. It must include the protocol sb:// */\n  endpointUri?: string;\n  /** Queue name on the service bus namespace */\n  entityPath?: string;\n  /** Method used to authenticate against the service bus queue endpoint */\n  authenticationType?: AuthenticationType;\n  /** Managed identity properties of routing service bus queue endpoint. */\n  identity?: ManagedIdentity;\n  /** The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name. */\n  name: string;\n  /** The subscription identifier of the service bus queue endpoint. */\n  subscriptionId?: string;\n  /** The name of the resource group of the service bus queue endpoint. */\n  resourceGroup?: string;\n}\n\n/** The properties of the Managed identity. */\nexport interface ManagedIdentity {\n  /** The user assigned identity. */\n  userAssignedIdentity?: string;\n}\n\n/** The properties related to service bus topic endpoint types. */\nexport interface RoutingServiceBusTopicEndpointProperties {\n  /** Id of the service bus topic endpoint */\n  id?: string;\n  /** The connection string of the service bus topic endpoint. */\n  connectionString?: string;\n  /** The url of the service bus topic endpoint. It must include the protocol sb:// */\n  endpointUri?: string;\n  /** Queue name on the service bus topic */\n  entityPath?: string;\n  /** Method used to authenticate against the service bus topic endpoint */\n  authenticationType?: AuthenticationType;\n  /** Managed identity properties of routing service bus topic endpoint. */\n  identity?: ManagedIdentity;\n  /** The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name. */\n  name: string;\n  /** The subscription identifier of the service bus topic endpoint. */\n  subscriptionId?: string;\n  /** The name of the resource group of the service bus topic endpoint. */\n  resourceGroup?: string;\n}\n\n/** The properties related to an event hub endpoint. */\nexport interface RoutingEventHubProperties {\n  /** Id of the event hub endpoint */\n  id?: string;\n  /** The connection string of the event hub endpoint. */\n  connectionString?: string;\n  /** The url of the event hub endpoint. It must include the protocol sb:// */\n  endpointUri?: string;\n  /** Event hub name on the event hub namespace */\n  entityPath?: string;\n  /** Method used to authenticate against the event hub endpoint */\n  authenticationType?: AuthenticationType;\n  /** Managed identity properties of routing event hub endpoint. */\n  identity?: ManagedIdentity;\n  /** The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. */\n  name: string;\n  /** The subscription identifier of the event hub endpoint. */\n  subscriptionId?: string;\n  /** The name of the resource group of the event hub endpoint. */\n  resourceGroup?: string;\n}\n\n/** The properties related to a storage container endpoint. */\nexport interface RoutingStorageContainerProperties {\n  /** Id of the storage container endpoint */\n  id?: string;\n  /** The connection string of the storage account. */\n  connectionString?: string;\n  /** The url of the storage endpoint. It must include the protocol https:// */\n  endpointUri?: string;\n  /** Method used to authenticate against the storage endpoint */\n  authenticationType?: AuthenticationType;\n  /** Managed identity properties of routing storage endpoint. */\n  identity?: ManagedIdentity;\n  /** The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. */\n  name: string;\n  /** The subscription identifier of the storage account. */\n  subscriptionId?: string;\n  /** The name of the resource group of the storage account. */\n  resourceGroup?: string;\n  /** The name of storage container in the storage account. */\n  containerName: string;\n  /** File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered. */\n  fileNameFormat?: string;\n  /** Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds. */\n  batchFrequencyInSeconds?: number;\n  /** Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB). */\n  maxChunkSizeInBytes?: number;\n  /** Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'. */\n  encoding?: RoutingStorageContainerPropertiesEncoding;\n}\n\n/** The properties of a routing rule that your IoT hub uses to route messages to endpoints. */\nexport interface RouteProperties {\n  /** The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique. */\n  name: string;\n  /** The source that the routing rule is to be applied to, such as DeviceMessages. */\n  source: RoutingSource;\n  /** The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language */\n  condition?: string;\n  /** The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed. */\n  endpointNames: string[];\n  /** Used to specify whether a route is enabled. */\n  isEnabled: boolean;\n}\n\n/** The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint. */\nexport interface FallbackRouteProperties {\n  /** The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique. */\n  name?: string;\n  /** The source to which the routing rule is to be applied to. For example, DeviceMessages */\n  source: RoutingSource;\n  /** The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language */\n  condition?: string;\n  /** The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed. */\n  endpointNames: string[];\n  /** Used to specify whether the fallback route is enabled. */\n  isEnabled: boolean;\n}\n\n/** The properties of an enrichment that your IoT hub applies to messages delivered to endpoints. */\nexport interface EnrichmentProperties {\n  /** The key or name for the enrichment property. */\n  key: string;\n  /** The value for the enrichment property. */\n  value: string;\n  /** The list of endpoints for which the enrichment is applied to the message. */\n  endpointNames: string[];\n}\n\n/** The properties of the Azure Storage endpoint for file upload. */\nexport interface StorageEndpointProperties {\n  /** The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options. */\n  sasTtlAsIso8601?: string;\n  /** The connection string for the Azure Storage account to which files are uploaded. */\n  connectionString: string;\n  /** The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified. */\n  containerName: string;\n  /** Specifies authentication type being used for connecting to the storage account. */\n  authenticationType?: AuthenticationType;\n  /** Managed identity properties of storage endpoint for file upload. */\n  identity?: ManagedIdentity;\n}\n\n/** The properties of the messaging endpoints used by this IoT hub. */\nexport interface MessagingEndpointProperties {\n  /** The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload. */\n  lockDurationAsIso8601?: string;\n  /** The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload. */\n  ttlAsIso8601?: string;\n  /** The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload. */\n  maxDeliveryCount?: number;\n}\n\n/** The IoT hub cloud-to-device messaging properties. */\nexport interface CloudToDeviceProperties {\n  /** The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages. */\n  maxDeliveryCount?: number;\n  /** The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages. */\n  defaultTtlAsIso8601?: string;\n  /** The properties of the feedback queue for cloud-to-device messages. */\n  feedback?: FeedbackProperties;\n}\n\n/** The properties of the feedback queue for cloud-to-device messages. */\nexport interface FeedbackProperties {\n  /** The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages. */\n  lockDurationAsIso8601?: string;\n  /** The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages. */\n  ttlAsIso8601?: string;\n  /** The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages. */\n  maxDeliveryCount?: number;\n}\n\n/** Public representation of one of the locations where a resource is provisioned. */\nexport interface IotHubLocationDescription {\n  /** The name of the Azure region */\n  location?: string;\n  /** The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to. */\n  role?: IotHubReplicaRoleType;\n}\n\n/** Information about the SKU of the IoT hub. */\nexport interface IotHubSkuInfo {\n  /** The name of the SKU. */\n  name: IotHubSku;\n  /**\n   * The billing tier for the IoT hub.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: IotHubSkuTier;\n  /** The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits. */\n  capacity?: number;\n}\n\nexport interface ArmIdentity {\n  /**\n   * Principal Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * Tenant Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service. */\n  type?: ResourceIdentityType;\n  /** Dictionary of <ArmUserIdentity> */\n  userAssignedIdentities?: { [propertyName: string]: ArmUserIdentity };\n}\n\nexport interface ArmUserIdentity {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly principalId?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly clientId?: string;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** The common properties of an Azure resource. */\nexport interface Resource {\n  /**\n   * The resource identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The resource location. */\n  location: string;\n  /** The resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** A container holding only the Tags for a resource, allowing the user to update the tags on an IoT Hub instance. */\nexport interface TagsResource {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The JSON-serialized array of IotHubDescription objects with a next link. */\nexport interface IotHubDescriptionListResult {\n  /** The array of IotHubDescription objects. */\n  value?: IotHubDescription[];\n  /**\n   * The next link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Identity registry statistics. */\nexport interface RegistryStatistics {\n  /**\n   * The total count of devices in the identity registry.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalDeviceCount?: number;\n  /**\n   * The count of enabled devices in the identity registry.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly enabledDeviceCount?: number;\n  /**\n   * The count of disabled devices in the identity registry.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly disabledDeviceCount?: number;\n}\n\n/** The JSON-serialized array of IotHubSkuDescription objects with a next link. */\nexport interface IotHubSkuDescriptionListResult {\n  /** The array of IotHubSkuDescription. */\n  value?: IotHubSkuDescription[];\n  /**\n   * The next link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** SKU properties. */\nexport interface IotHubSkuDescription {\n  /**\n   * The type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /** The type of the resource. */\n  sku: IotHubSkuInfo;\n  /** IotHub capacity */\n  capacity: IotHubCapacity;\n}\n\n/** IoT Hub capacity information. */\nexport interface IotHubCapacity {\n  /**\n   * The minimum number of units.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minimum?: number;\n  /**\n   * The maximum number of units.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maximum?: number;\n  /**\n   * The default number of units.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly default?: number;\n  /**\n   * The type of the scaling enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scaleType?: IotHubScaleType;\n}\n\n/** The JSON-serialized array of Event Hub-compatible consumer group names with a next link. */\nexport interface EventHubConsumerGroupsListResult {\n  /** List of consumer groups objects */\n  value?: EventHubConsumerGroupInfo[];\n  /**\n   * The next link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties of the EventHubConsumerGroupInfo object. */\nexport interface EventHubConsumerGroupInfo {\n  /** The tags. */\n  properties?: { [propertyName: string]: any };\n  /**\n   * The Event Hub-compatible consumer group identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The Event Hub-compatible consumer group name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * the resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The etag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** The EventHub consumer group. */\nexport interface EventHubConsumerGroupBodyDescription {\n  /** The EventHub consumer group name. */\n  properties: EventHubConsumerGroupName;\n}\n\n/** The EventHub consumer group name. */\nexport interface EventHubConsumerGroupName {\n  /** EventHub consumer group name */\n  name: string;\n}\n\n/** The JSON-serialized array of JobResponse objects with a next link. */\nexport interface JobResponseListResult {\n  /** The array of JobResponse objects. */\n  value?: JobResponse[];\n  /**\n   * The next link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties of the Job Response object. */\nexport interface JobResponse {\n  /**\n   * The job identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly jobId?: string;\n  /**\n   * The start time of the job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTimeUtc?: Date;\n  /**\n   * The time the job stopped processing.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTimeUtc?: Date;\n  /**\n   * The type of the job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: JobType;\n  /**\n   * The status of the job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: JobStatus;\n  /**\n   * If status == failed, this string containing the reason for the failure.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failureReason?: string;\n  /**\n   * The status message for the job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusMessage?: string;\n  /**\n   * The job identifier of the parent job, if any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parentJobId?: string;\n}\n\n/** The JSON-serialized array of IotHubQuotaMetricInfo objects with a next link. */\nexport interface IotHubQuotaMetricInfoListResult {\n  /** The array of quota metrics objects. */\n  value?: IotHubQuotaMetricInfo[];\n  /**\n   * The next link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Quota metrics properties. */\nexport interface IotHubQuotaMetricInfo {\n  /**\n   * The name of the quota metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The current value for the quota metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * The maximum value of the quota metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxValue?: number;\n}\n\n/** The JSON-serialized array of EndpointHealthData objects with a next link. */\nexport interface EndpointHealthDataListResult {\n  /** JSON-serialized array of Endpoint health data */\n  value?: EndpointHealthData[];\n  /**\n   * Link to more results\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The health data for an endpoint */\nexport interface EndpointHealthData {\n  /** Id of the endpoint */\n  endpointId?: string;\n  /** Health statuses have following meanings. The 'healthy' status shows that the endpoint is accepting messages as expected. The 'unhealthy' status shows that the endpoint is not accepting messages as expected and IoT Hub is retrying to send data to this endpoint. The status of an unhealthy endpoint will be updated to healthy when IoT Hub has established an eventually consistent state of health. The 'dead' status shows that the endpoint is not accepting messages, after IoT Hub retried sending messages for the retrial period. See IoT Hub metrics to identify errors and monitor issues with endpoints. The 'unknown' status shows that the IoT Hub has not established a connection with the endpoint. No messages have been delivered to or rejected from this endpoint */\n  healthStatus?: EndpointHealthStatus;\n  /** Last error obtained when a message failed to be delivered to iot hub */\n  lastKnownError?: string;\n  /** Time at which the last known error occurred */\n  lastKnownErrorTime?: Date;\n  /** Last time iot hub successfully sent a message to the endpoint */\n  lastSuccessfulSendAttemptTime?: Date;\n  /** Last time iot hub tried to send a message to the endpoint */\n  lastSendAttemptTime?: Date;\n}\n\n/** Input values. */\nexport interface OperationInputs {\n  /** The name of the IoT hub to check. */\n  name: string;\n}\n\n/** The properties indicating whether a given IoT hub name is available. */\nexport interface IotHubNameAvailabilityInfo {\n  /**\n   * The value which indicates whether the provided name is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nameAvailable?: boolean;\n  /**\n   * The reason for unavailability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: IotHubNameUnavailabilityReason;\n  /** The detailed reason message. */\n  message?: string;\n}\n\n/** Json-serialized array of User subscription quota response */\nexport interface UserSubscriptionQuotaListResult {\n  value?: UserSubscriptionQuota[];\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly nextLink?: string;\n}\n\n/** User subscription quota response */\nexport interface UserSubscriptionQuota {\n  /** IotHub type id */\n  id?: string;\n  /** Response type */\n  type?: string;\n  /** Unit of IotHub type */\n  unit?: string;\n  /** Current number of IotHub type */\n  currentValue?: number;\n  /** Numerical limit on IotHub type */\n  limit?: number;\n  /** IotHub type */\n  name?: Name;\n}\n\n/** Name of Iot Hub type */\nexport interface Name {\n  /** IotHub type */\n  value?: string;\n  /** Localized value of name */\n  localizedValue?: string;\n}\n\n/** Input for testing all routes */\nexport interface TestAllRoutesInput {\n  /** Routing source */\n  routingSource?: RoutingSource;\n  /** Routing message */\n  message?: RoutingMessage;\n  /** Routing Twin Reference */\n  twin?: RoutingTwin;\n}\n\n/** Routing message */\nexport interface RoutingMessage {\n  /** Body of routing message */\n  body?: string;\n  /** App properties */\n  appProperties?: { [propertyName: string]: string };\n  /** System properties */\n  systemProperties?: { [propertyName: string]: string };\n}\n\n/** Twin reference input parameter. This is an optional parameter */\nexport interface RoutingTwin {\n  /** Twin Tags */\n  tags?: Record<string, unknown>;\n  properties?: RoutingTwinProperties;\n}\n\nexport interface RoutingTwinProperties {\n  /** Twin desired properties */\n  desired?: Record<string, unknown>;\n  /** Twin desired properties */\n  reported?: Record<string, unknown>;\n}\n\n/** Result of testing all routes */\nexport interface TestAllRoutesResult {\n  /** JSON-serialized array of matched routes */\n  routes?: MatchedRoute[];\n}\n\n/** Routes that matched */\nexport interface MatchedRoute {\n  /** Properties of routes that matched */\n  properties?: RouteProperties;\n}\n\n/** Input for testing route */\nexport interface TestRouteInput {\n  /** Routing message */\n  message?: RoutingMessage;\n  /** Route properties */\n  route: RouteProperties;\n  /** Routing Twin Reference */\n  twin?: RoutingTwin;\n}\n\n/** Result of testing one route */\nexport interface TestRouteResult {\n  /** Result of testing route */\n  result?: TestResultStatus;\n  /** Detailed result of testing route */\n  details?: TestRouteResultDetails;\n}\n\n/** Detailed result of testing a route */\nexport interface TestRouteResultDetails {\n  /** JSON-serialized list of route compilation errors */\n  compilationErrors?: RouteCompilationError[];\n}\n\n/** Compilation error when evaluating route */\nexport interface RouteCompilationError {\n  /** Route error message */\n  message?: string;\n  /** Severity of the route error */\n  severity?: RouteErrorSeverity;\n  /** Location where the route error happened */\n  location?: RouteErrorRange;\n}\n\n/** Range of route errors */\nexport interface RouteErrorRange {\n  /** Start where the route error happened */\n  start?: RouteErrorPosition;\n  /** End where the route error happened */\n  end?: RouteErrorPosition;\n}\n\n/** Position where the route error happened */\nexport interface RouteErrorPosition {\n  /** Line where the route error happened */\n  line?: number;\n  /** Column where the route error happened */\n  column?: number;\n}\n\n/** The list of shared access policies with a next link. */\nexport interface SharedAccessSignatureAuthorizationRuleListResult {\n  /** The list of shared access policies. */\n  value?: SharedAccessSignatureAuthorizationRule[];\n  /**\n   * The next link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Use to provide parameters when requesting an export of all devices in the IoT hub. */\nexport interface ExportDevicesRequest {\n  /** The export blob container URI. */\n  exportBlobContainerUri: string;\n  /** The value indicating whether keys should be excluded during export. */\n  excludeKeys: boolean;\n  /** The name of the blob that will be created in the provided output blob container. This blob will contain the exported device registry information for the IoT Hub. */\n  exportBlobName?: string;\n  /** Specifies authentication type being used for connecting to the storage account. */\n  authenticationType?: AuthenticationType;\n  /** Managed identity properties of storage endpoint for export devices. */\n  identity?: ManagedIdentity;\n  /** The value indicating whether configurations should be exported. */\n  includeConfigurations?: boolean;\n  /** The name of the blob that will be created in the provided output blob container. This blob will contain the exported configurations for the Iot Hub. */\n  configurationsBlobName?: string;\n}\n\n/** Use to provide parameters when requesting an import of all devices in the hub. */\nexport interface ImportDevicesRequest {\n  /** The input blob container URI. */\n  inputBlobContainerUri: string;\n  /** The output blob container URI. */\n  outputBlobContainerUri: string;\n  /** The blob name to be used when importing from the provided input blob container. */\n  inputBlobName?: string;\n  /** The blob name to use for storing the status of the import job. */\n  outputBlobName?: string;\n  /** Specifies authentication type being used for connecting to the storage account. */\n  authenticationType?: AuthenticationType;\n  /** Managed identity properties of storage endpoint for import devices. */\n  identity?: ManagedIdentity;\n  /** The value indicating whether configurations should be imported. */\n  includeConfigurations?: boolean;\n  /** The blob name to be used when importing configurations from the provided input blob container. */\n  configurationsBlobName?: string;\n}\n\n/** The JSON-serialized array of Certificate objects. */\nexport interface CertificateListDescription {\n  /** The array of Certificate objects. */\n  value?: CertificateDescription[];\n}\n\n/** The X509 Certificate. */\nexport interface CertificateDescription {\n  /** The description of an X509 CA Certificate. */\n  properties?: CertificateProperties;\n  /**\n   * The resource identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The entity tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** The description of an X509 CA Certificate. */\nexport interface CertificateProperties {\n  /**\n   * The certificate's subject name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subject?: string;\n  /**\n   * The certificate's expiration date and time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiry?: Date;\n  /**\n   * The certificate's thumbprint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n  /** Determines whether certificate has been verified. */\n  isVerified?: boolean;\n  /**\n   * The certificate's create date and time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: Date;\n  /**\n   * The certificate's last update date and time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updated?: Date;\n  /** The certificate content */\n  certificate?: string;\n}\n\n/** The X509 Certificate. */\nexport interface CertificateWithNonceDescription {\n  /** The description of an X509 CA Certificate including the challenge nonce issued for the Proof-Of-Possession flow. */\n  properties?: CertificatePropertiesWithNonce;\n  /**\n   * The resource identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The entity tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** The description of an X509 CA Certificate including the challenge nonce issued for the Proof-Of-Possession flow. */\nexport interface CertificatePropertiesWithNonce {\n  /**\n   * The certificate's subject name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subject?: string;\n  /**\n   * The certificate's expiration date and time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiry?: Date;\n  /**\n   * The certificate's thumbprint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n  /**\n   * Determines whether certificate has been verified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isVerified?: boolean;\n  /**\n   * The certificate's create date and time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: Date;\n  /**\n   * The certificate's last update date and time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updated?: Date;\n  /**\n   * The certificate's verification code that will be used for proof of possession.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly verificationCode?: string;\n  /**\n   * The certificate content\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly certificate?: string;\n}\n\n/** The JSON-serialized leaf certificate */\nexport interface CertificateVerificationDescription {\n  /** base-64 representation of X509 certificate .cer file or just .pem file content. */\n  certificate?: string;\n}\n\n/** Use to provide failover region when requesting manual Failover for a hub. */\nexport interface FailoverInput {\n  /** Region the hub will be failed over to */\n  failoverRegion: string;\n}\n\n/** The available private link resources for an IotHub */\nexport interface PrivateLinkResources {\n  /** The list of available private link resources for an IotHub */\n  value?: GroupIdInformation[];\n}\n\n/** The group information for creating a private endpoint on an IotHub */\nexport interface GroupIdInformation {\n  /**\n   * The resource identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The properties for a group information object */\n  properties: GroupIdInformationProperties;\n}\n\n/** The properties for a group information object */\nexport interface GroupIdInformationProperties {\n  /** The group id */\n  groupId?: string;\n  /** The required members for a specific group id */\n  requiredMembers?: string[];\n  /** The required DNS zones for a specific group id */\n  requiredZoneNames?: string[];\n}\n\n/** The JSON-serialized X509 Certificate. */\nexport interface CertificateBodyDescription {\n  /** base-64 representation of the X509 leaf certificate .cer file or just .pem file content. */\n  certificate?: string;\n  /** True indicates that the certificate will be created in verified state and proof of possession will not be required. */\n  isVerified?: boolean;\n}\n\n/** The description of the IoT hub. */\nexport interface IotHubDescription extends Resource {\n  /** The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention. */\n  etag?: string;\n  /** IotHub properties */\n  properties?: IotHubProperties;\n  /** IotHub SKU info */\n  sku: IotHubSkuInfo;\n  /** The managed identities for the IotHub. */\n  identity?: ArmIdentity;\n  /**\n   * The system meta data relating to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Known values of {@link PublicNetworkAccess} that the service accepts. */\nexport enum KnownPublicNetworkAccess {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PublicNetworkAccess. \\\n * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type PublicNetworkAccess = string;\n\n/** Known values of {@link DefaultAction} that the service accepts. */\nexport enum KnownDefaultAction {\n  /** Deny */\n  Deny = \"Deny\",\n  /** Allow */\n  Allow = \"Allow\"\n}\n\n/**\n * Defines values for DefaultAction. \\\n * {@link KnownDefaultAction} can be used interchangeably with DefaultAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Deny** \\\n * **Allow**\n */\nexport type DefaultAction = string;\n\n/** Known values of {@link NetworkRuleIPAction} that the service accepts. */\nexport enum KnownNetworkRuleIPAction {\n  /** Allow */\n  Allow = \"Allow\"\n}\n\n/**\n * Defines values for NetworkRuleIPAction. \\\n * {@link KnownNetworkRuleIPAction} can be used interchangeably with NetworkRuleIPAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Allow**\n */\nexport type NetworkRuleIPAction = string;\n\n/** Known values of {@link PrivateLinkServiceConnectionStatus} that the service accepts. */\nexport enum KnownPrivateLinkServiceConnectionStatus {\n  /** Pending */\n  Pending = \"Pending\",\n  /** Approved */\n  Approved = \"Approved\",\n  /** Rejected */\n  Rejected = \"Rejected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\"\n}\n\n/**\n * Defines values for PrivateLinkServiceConnectionStatus. \\\n * {@link KnownPrivateLinkServiceConnectionStatus} can be used interchangeably with PrivateLinkServiceConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Approved** \\\n * **Rejected** \\\n * **Disconnected**\n */\nexport type PrivateLinkServiceConnectionStatus = string;\n\n/** Known values of {@link AuthenticationType} that the service accepts. */\nexport enum KnownAuthenticationType {\n  /** KeyBased */\n  KeyBased = \"keyBased\",\n  /** IdentityBased */\n  IdentityBased = \"identityBased\"\n}\n\n/**\n * Defines values for AuthenticationType. \\\n * {@link KnownAuthenticationType} can be used interchangeably with AuthenticationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **keyBased** \\\n * **identityBased**\n */\nexport type AuthenticationType = string;\n\n/** Known values of {@link RoutingStorageContainerPropertiesEncoding} that the service accepts. */\nexport enum KnownRoutingStorageContainerPropertiesEncoding {\n  /** Avro */\n  Avro = \"Avro\",\n  /** AvroDeflate */\n  AvroDeflate = \"AvroDeflate\",\n  /** Json */\n  Json = \"JSON\"\n}\n\n/**\n * Defines values for RoutingStorageContainerPropertiesEncoding. \\\n * {@link KnownRoutingStorageContainerPropertiesEncoding} can be used interchangeably with RoutingStorageContainerPropertiesEncoding,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Avro** \\\n * **AvroDeflate** \\\n * **JSON**\n */\nexport type RoutingStorageContainerPropertiesEncoding = string;\n\n/** Known values of {@link RoutingSource} that the service accepts. */\nexport enum KnownRoutingSource {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** DeviceMessages */\n  DeviceMessages = \"DeviceMessages\",\n  /** TwinChangeEvents */\n  TwinChangeEvents = \"TwinChangeEvents\",\n  /** DeviceLifecycleEvents */\n  DeviceLifecycleEvents = \"DeviceLifecycleEvents\",\n  /** DeviceJobLifecycleEvents */\n  DeviceJobLifecycleEvents = \"DeviceJobLifecycleEvents\",\n  /** DeviceConnectionStateEvents */\n  DeviceConnectionStateEvents = \"DeviceConnectionStateEvents\"\n}\n\n/**\n * Defines values for RoutingSource. \\\n * {@link KnownRoutingSource} can be used interchangeably with RoutingSource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **DeviceMessages** \\\n * **TwinChangeEvents** \\\n * **DeviceLifecycleEvents** \\\n * **DeviceJobLifecycleEvents** \\\n * **DeviceConnectionStateEvents**\n */\nexport type RoutingSource = string;\n\n/** Known values of {@link Capabilities} that the service accepts. */\nexport enum KnownCapabilities {\n  /** None */\n  None = \"None\",\n  /** DeviceManagement */\n  DeviceManagement = \"DeviceManagement\"\n}\n\n/**\n * Defines values for Capabilities. \\\n * {@link KnownCapabilities} can be used interchangeably with Capabilities,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **DeviceManagement**\n */\nexport type Capabilities = string;\n\n/** Known values of {@link IotHubReplicaRoleType} that the service accepts. */\nexport enum KnownIotHubReplicaRoleType {\n  /** Primary */\n  Primary = \"primary\",\n  /** Secondary */\n  Secondary = \"secondary\"\n}\n\n/**\n * Defines values for IotHubReplicaRoleType. \\\n * {@link KnownIotHubReplicaRoleType} can be used interchangeably with IotHubReplicaRoleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **primary** \\\n * **secondary**\n */\nexport type IotHubReplicaRoleType = string;\n\n/** Known values of {@link IotHubSku} that the service accepts. */\nexport enum KnownIotHubSku {\n  /** F1 */\n  F1 = \"F1\",\n  /** S1 */\n  S1 = \"S1\",\n  /** S2 */\n  S2 = \"S2\",\n  /** S3 */\n  S3 = \"S3\",\n  /** B1 */\n  B1 = \"B1\",\n  /** B2 */\n  B2 = \"B2\",\n  /** B3 */\n  B3 = \"B3\"\n}\n\n/**\n * Defines values for IotHubSku. \\\n * {@link KnownIotHubSku} can be used interchangeably with IotHubSku,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **F1** \\\n * **S1** \\\n * **S2** \\\n * **S3** \\\n * **B1** \\\n * **B2** \\\n * **B3**\n */\nexport type IotHubSku = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link JobType} that the service accepts. */\nexport enum KnownJobType {\n  /** Unknown */\n  Unknown = \"unknown\",\n  /** Export */\n  Export = \"export\",\n  /** Import */\n  Import = \"import\",\n  /** Backup */\n  Backup = \"backup\",\n  /** ReadDeviceProperties */\n  ReadDeviceProperties = \"readDeviceProperties\",\n  /** WriteDeviceProperties */\n  WriteDeviceProperties = \"writeDeviceProperties\",\n  /** UpdateDeviceConfiguration */\n  UpdateDeviceConfiguration = \"updateDeviceConfiguration\",\n  /** RebootDevice */\n  RebootDevice = \"rebootDevice\",\n  /** FactoryResetDevice */\n  FactoryResetDevice = \"factoryResetDevice\",\n  /** FirmwareUpdate */\n  FirmwareUpdate = \"firmwareUpdate\"\n}\n\n/**\n * Defines values for JobType. \\\n * {@link KnownJobType} can be used interchangeably with JobType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **unknown** \\\n * **export** \\\n * **import** \\\n * **backup** \\\n * **readDeviceProperties** \\\n * **writeDeviceProperties** \\\n * **updateDeviceConfiguration** \\\n * **rebootDevice** \\\n * **factoryResetDevice** \\\n * **firmwareUpdate**\n */\nexport type JobType = string;\n\n/** Known values of {@link EndpointHealthStatus} that the service accepts. */\nexport enum KnownEndpointHealthStatus {\n  /** Unknown */\n  Unknown = \"unknown\",\n  /** Healthy */\n  Healthy = \"healthy\",\n  /** Degraded */\n  Degraded = \"degraded\",\n  /** Unhealthy */\n  Unhealthy = \"unhealthy\",\n  /** Dead */\n  Dead = \"dead\"\n}\n\n/**\n * Defines values for EndpointHealthStatus. \\\n * {@link KnownEndpointHealthStatus} can be used interchangeably with EndpointHealthStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **unknown** \\\n * **healthy** \\\n * **degraded** \\\n * **unhealthy** \\\n * **dead**\n */\nexport type EndpointHealthStatus = string;\n\n/** Known values of {@link TestResultStatus} that the service accepts. */\nexport enum KnownTestResultStatus {\n  /** Undefined */\n  Undefined = \"undefined\",\n  /** False */\n  False = \"false\",\n  /** True */\n  True = \"true\"\n}\n\n/**\n * Defines values for TestResultStatus. \\\n * {@link KnownTestResultStatus} can be used interchangeably with TestResultStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **undefined** \\\n * **false** \\\n * **true**\n */\nexport type TestResultStatus = string;\n\n/** Known values of {@link RouteErrorSeverity} that the service accepts. */\nexport enum KnownRouteErrorSeverity {\n  /** Error */\n  Error = \"error\",\n  /** Warning */\n  Warning = \"warning\"\n}\n\n/**\n * Defines values for RouteErrorSeverity. \\\n * {@link KnownRouteErrorSeverity} can be used interchangeably with RouteErrorSeverity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **error** \\\n * **warning**\n */\nexport type RouteErrorSeverity = string;\n/** Defines values for AccessRights. */\nexport type AccessRights =\n  | \"RegistryRead\"\n  | \"RegistryWrite\"\n  | \"ServiceConnect\"\n  | \"DeviceConnect\"\n  | \"RegistryRead, RegistryWrite\"\n  | \"RegistryRead, ServiceConnect\"\n  | \"RegistryRead, DeviceConnect\"\n  | \"RegistryWrite, ServiceConnect\"\n  | \"RegistryWrite, DeviceConnect\"\n  | \"ServiceConnect, DeviceConnect\"\n  | \"RegistryRead, RegistryWrite, ServiceConnect\"\n  | \"RegistryRead, RegistryWrite, DeviceConnect\"\n  | \"RegistryRead, ServiceConnect, DeviceConnect\"\n  | \"RegistryWrite, ServiceConnect, DeviceConnect\"\n  | \"RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect\";\n/** Defines values for IpFilterActionType. */\nexport type IpFilterActionType = \"Accept\" | \"Reject\";\n/** Defines values for IotHubSkuTier. */\nexport type IotHubSkuTier = \"Free\" | \"Standard\" | \"Basic\";\n/** Defines values for ResourceIdentityType. */\nexport type ResourceIdentityType =\n  | \"SystemAssigned\"\n  | \"UserAssigned\"\n  | \"SystemAssigned, UserAssigned\"\n  | \"None\";\n/** Defines values for IotHubScaleType. */\nexport type IotHubScaleType = \"Automatic\" | \"Manual\" | \"None\";\n/** Defines values for JobStatus. */\nexport type JobStatus =\n  | \"unknown\"\n  | \"enqueued\"\n  | \"running\"\n  | \"completed\"\n  | \"failed\"\n  | \"cancelled\";\n/** Defines values for IotHubNameUnavailabilityReason. */\nexport type IotHubNameUnavailabilityReason = \"Invalid\" | \"AlreadyExists\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type IotHubResourceGetResponse = IotHubDescription;\n\n/** Optional parameters. */\nexport interface IotHubResourceCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** ETag of the IoT Hub. Do not specify for creating a brand new IoT Hub. Required to update an existing IoT Hub. */\n  ifMatch?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type IotHubResourceCreateOrUpdateResponse = IotHubDescription;\n\n/** Optional parameters. */\nexport interface IotHubResourceUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type IotHubResourceUpdateResponse = IotHubDescription;\n\n/** Optional parameters. */\nexport interface IotHubResourceDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type IotHubResourceDeleteResponse = IotHubDescription;\n\n/** Optional parameters. */\nexport interface IotHubResourceListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type IotHubResourceListBySubscriptionResponse = IotHubDescriptionListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type IotHubResourceListByResourceGroupResponse = IotHubDescriptionListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetStatsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getStats operation. */\nexport type IotHubResourceGetStatsResponse = RegistryStatistics;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetValidSkusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getValidSkus operation. */\nexport type IotHubResourceGetValidSkusResponse = IotHubSkuDescriptionListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceListEventHubConsumerGroupsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listEventHubConsumerGroups operation. */\nexport type IotHubResourceListEventHubConsumerGroupsResponse = EventHubConsumerGroupsListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetEventHubConsumerGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getEventHubConsumerGroup operation. */\nexport type IotHubResourceGetEventHubConsumerGroupResponse = EventHubConsumerGroupInfo;\n\n/** Optional parameters. */\nexport interface IotHubResourceCreateEventHubConsumerGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createEventHubConsumerGroup operation. */\nexport type IotHubResourceCreateEventHubConsumerGroupResponse = EventHubConsumerGroupInfo;\n\n/** Optional parameters. */\nexport interface IotHubResourceDeleteEventHubConsumerGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface IotHubResourceListJobsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listJobs operation. */\nexport type IotHubResourceListJobsResponse = JobResponseListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetJobOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getJob operation. */\nexport type IotHubResourceGetJobResponse = JobResponse;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetQuotaMetricsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getQuotaMetrics operation. */\nexport type IotHubResourceGetQuotaMetricsResponse = IotHubQuotaMetricInfoListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetEndpointHealthOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getEndpointHealth operation. */\nexport type IotHubResourceGetEndpointHealthResponse = EndpointHealthDataListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type IotHubResourceCheckNameAvailabilityResponse = IotHubNameAvailabilityInfo;\n\n/** Optional parameters. */\nexport interface IotHubResourceTestAllRoutesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the testAllRoutes operation. */\nexport type IotHubResourceTestAllRoutesResponse = TestAllRoutesResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceTestRouteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the testRoute operation. */\nexport type IotHubResourceTestRouteResponse = TestRouteResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type IotHubResourceListKeysResponse = SharedAccessSignatureAuthorizationRuleListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetKeysForKeyNameOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getKeysForKeyName operation. */\nexport type IotHubResourceGetKeysForKeyNameResponse = SharedAccessSignatureAuthorizationRule;\n\n/** Optional parameters. */\nexport interface IotHubResourceExportDevicesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportDevices operation. */\nexport type IotHubResourceExportDevicesResponse = JobResponse;\n\n/** Optional parameters. */\nexport interface IotHubResourceImportDevicesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the importDevices operation. */\nexport type IotHubResourceImportDevicesResponse = JobResponse;\n\n/** Optional parameters. */\nexport interface IotHubResourceListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type IotHubResourceListBySubscriptionNextResponse = IotHubDescriptionListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type IotHubResourceListByResourceGroupNextResponse = IotHubDescriptionListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetValidSkusNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getValidSkusNext operation. */\nexport type IotHubResourceGetValidSkusNextResponse = IotHubSkuDescriptionListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceListEventHubConsumerGroupsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listEventHubConsumerGroupsNext operation. */\nexport type IotHubResourceListEventHubConsumerGroupsNextResponse = EventHubConsumerGroupsListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceListJobsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listJobsNext operation. */\nexport type IotHubResourceListJobsNextResponse = JobResponseListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetQuotaMetricsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getQuotaMetricsNext operation. */\nexport type IotHubResourceGetQuotaMetricsNextResponse = IotHubQuotaMetricInfoListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceGetEndpointHealthNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getEndpointHealthNext operation. */\nexport type IotHubResourceGetEndpointHealthNextResponse = EndpointHealthDataListResult;\n\n/** Optional parameters. */\nexport interface IotHubResourceListKeysNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeysNext operation. */\nexport type IotHubResourceListKeysNextResponse = SharedAccessSignatureAuthorizationRuleListResult;\n\n/** Optional parameters. */\nexport interface ResourceProviderCommonGetSubscriptionQuotaOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSubscriptionQuota operation. */\nexport type ResourceProviderCommonGetSubscriptionQuotaResponse = UserSubscriptionQuotaListResult;\n\n/** Optional parameters. */\nexport interface CertificatesListByIotHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByIotHub operation. */\nexport type CertificatesListByIotHubResponse = CertificateListDescription;\n\n/** Optional parameters. */\nexport interface CertificatesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CertificatesGetResponse = CertificateDescription;\n\n/** Optional parameters. */\nexport interface CertificatesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** ETag of the Certificate. Do not specify for creating a brand new certificate. Required to update an existing certificate. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CertificatesCreateOrUpdateResponse = CertificateDescription;\n\n/** Optional parameters. */\nexport interface CertificatesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CertificatesGenerateVerificationCodeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the generateVerificationCode operation. */\nexport type CertificatesGenerateVerificationCodeResponse = CertificateWithNonceDescription;\n\n/** Optional parameters. */\nexport interface CertificatesVerifyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the verify operation. */\nexport type CertificatesVerifyResponse = CertificateDescription;\n\n/** Optional parameters. */\nexport interface IotHubManualFailoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateLinkResourcesListResponse = PrivateLinkResources;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateLinkResourcesGetResponse = GroupIdInformation;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateEndpointConnectionsListResponse = PrivateEndpointConnection[];\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type PrivateEndpointConnectionsUpdateResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type PrivateEndpointConnectionsDeleteResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface IotHubClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetails\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      httpStatusCode: {\n        serializedName: \"httpStatusCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubProperties\",\n    modelProperties: {\n      authorizationPolicies: {\n        serializedName: \"authorizationPolicies\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessSignatureAuthorizationRule\"\n            }\n          }\n        }\n      },\n      disableLocalAuth: {\n        serializedName: \"disableLocalAuth\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      disableDeviceSAS: {\n        serializedName: \"disableDeviceSAS\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      disableModuleSAS: {\n        serializedName: \"disableModuleSAS\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      restrictOutboundNetworkAccess: {\n        serializedName: \"restrictOutboundNetworkAccess\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowedFqdnList: {\n        serializedName: \"allowedFqdnList\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipFilterRules: {\n        serializedName: \"ipFilterRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IpFilterRule\"\n            }\n          }\n        }\n      },\n      networkRuleSets: {\n        serializedName: \"networkRuleSets\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkRuleSetProperties\"\n        }\n      },\n      minTlsVersion: {\n        serializedName: \"minTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"privateEndpointConnections\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"hostName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHubEndpoints: {\n        serializedName: \"eventHubEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"EventHubProperties\" }\n          }\n        }\n      },\n      routing: {\n        serializedName: \"routing\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingProperties\"\n        }\n      },\n      storageEndpoints: {\n        serializedName: \"storageEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"StorageEndpointProperties\" }\n          }\n        }\n      },\n      messagingEndpoints: {\n        serializedName: \"messagingEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"MessagingEndpointProperties\"\n            }\n          }\n        }\n      },\n      enableFileUploadNotifications: {\n        serializedName: \"enableFileUploadNotifications\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      cloudToDevice: {\n        serializedName: \"cloudToDevice\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudToDeviceProperties\"\n        }\n      },\n      comments: {\n        serializedName: \"comments\",\n        type: {\n          name: \"String\"\n        }\n      },\n      features: {\n        serializedName: \"features\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubLocationDescription\"\n            }\n          }\n        }\n      },\n      enableDataResidency: {\n        serializedName: \"enableDataResidency\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessSignatureAuthorizationRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessSignatureAuthorizationRule\",\n    modelProperties: {\n      keyName: {\n        serializedName: \"keyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryKey: {\n        serializedName: \"primaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"secondaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rights: {\n        serializedName: \"rights\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"RegistryRead\",\n            \"RegistryWrite\",\n            \"ServiceConnect\",\n            \"DeviceConnect\",\n            \"RegistryRead, RegistryWrite\",\n            \"RegistryRead, ServiceConnect\",\n            \"RegistryRead, DeviceConnect\",\n            \"RegistryWrite, ServiceConnect\",\n            \"RegistryWrite, DeviceConnect\",\n            \"ServiceConnect, DeviceConnect\",\n            \"RegistryRead, RegistryWrite, ServiceConnect\",\n            \"RegistryRead, RegistryWrite, DeviceConnect\",\n            \"RegistryRead, ServiceConnect, DeviceConnect\",\n            \"RegistryWrite, ServiceConnect, DeviceConnect\",\n            \"RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const IpFilterRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IpFilterRule\",\n    modelProperties: {\n      filterName: {\n        serializedName: \"filterName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        serializedName: \"action\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Accept\", \"Reject\"]\n        }\n      },\n      ipMask: {\n        serializedName: \"ipMask\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkRuleSetProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkRuleSetProperties\",\n    modelProperties: {\n      defaultAction: {\n        defaultValue: \"Deny\",\n        serializedName: \"defaultAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applyToBuiltInEventHubEndpoint: {\n        serializedName: \"applyToBuiltInEventHubEndpoint\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      ipRules: {\n        serializedName: \"ipRules\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NetworkRuleSetIpRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkRuleSetIpRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkRuleSetIpRule\",\n    modelProperties: {\n      filterName: {\n        serializedName: \"filterName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        defaultValue: \"Allow\",\n        serializedName: \"action\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipMask: {\n        serializedName: \"ipMask\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpointConnectionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionProperties\",\n    modelProperties: {\n      privateEndpoint: {\n        serializedName: \"privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubProperties\",\n    modelProperties: {\n      retentionTimeInDays: {\n        serializedName: \"retentionTimeInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      partitionCount: {\n        serializedName: \"partitionCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      partitionIds: {\n        serializedName: \"partitionIds\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      path: {\n        serializedName: \"path\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoint: {\n        serializedName: \"endpoint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingProperties\",\n    modelProperties: {\n      endpoints: {\n        serializedName: \"endpoints\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingEndpoints\"\n        }\n      },\n      routes: {\n        serializedName: \"routes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RouteProperties\"\n            }\n          }\n        }\n      },\n      fallbackRoute: {\n        serializedName: \"fallbackRoute\",\n        type: {\n          name: \"Composite\",\n          className: \"FallbackRouteProperties\"\n        }\n      },\n      enrichments: {\n        serializedName: \"enrichments\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EnrichmentProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingEndpoints: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingEndpoints\",\n    modelProperties: {\n      serviceBusQueues: {\n        serializedName: \"serviceBusQueues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingServiceBusQueueEndpointProperties\"\n            }\n          }\n        }\n      },\n      serviceBusTopics: {\n        serializedName: \"serviceBusTopics\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingServiceBusTopicEndpointProperties\"\n            }\n          }\n        }\n      },\n      eventHubs: {\n        serializedName: \"eventHubs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingEventHubProperties\"\n            }\n          }\n        }\n      },\n      storageContainers: {\n        serializedName: \"storageContainers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingStorageContainerProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingServiceBusQueueEndpointProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingServiceBusQueueEndpointProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityPath: {\n        serializedName: \"entityPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIdentity\",\n    modelProperties: {\n      userAssignedIdentity: {\n        serializedName: \"userAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingServiceBusTopicEndpointProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingServiceBusTopicEndpointProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityPath: {\n        serializedName: \"entityPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingEventHubProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingEventHubProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityPath: {\n        serializedName: \"entityPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingStorageContainerProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingStorageContainerProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"containerName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fileNameFormat: {\n        serializedName: \"fileNameFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      batchFrequencyInSeconds: {\n        constraints: {\n          InclusiveMaximum: 720,\n          InclusiveMinimum: 60\n        },\n        serializedName: \"batchFrequencyInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxChunkSizeInBytes: {\n        constraints: {\n          InclusiveMaximum: 524288000,\n          InclusiveMinimum: 10485760\n        },\n        serializedName: \"maxChunkSizeInBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      encoding: {\n        serializedName: \"encoding\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteProperties\",\n    modelProperties: {\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointNames: {\n        constraints: {\n          MinItems: 1,\n          MaxItems: 1\n        },\n        serializedName: \"endpointNames\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const FallbackRouteProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FallbackRouteProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointNames: {\n        constraints: {\n          MinItems: 1,\n          MaxItems: 1\n        },\n        serializedName: \"endpointNames\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnrichmentProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnrichmentProperties\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointNames: {\n        constraints: {\n          MinItems: 1\n        },\n        serializedName: \"endpointNames\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StorageEndpointProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageEndpointProperties\",\n    modelProperties: {\n      sasTtlAsIso8601: {\n        serializedName: \"sasTtlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"containerName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      }\n    }\n  }\n};\n\nexport const MessagingEndpointProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MessagingEndpointProperties\",\n    modelProperties: {\n      lockDurationAsIso8601: {\n        serializedName: \"lockDurationAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      ttlAsIso8601: {\n        serializedName: \"ttlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      maxDeliveryCount: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"maxDeliveryCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudToDeviceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudToDeviceProperties\",\n    modelProperties: {\n      maxDeliveryCount: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"maxDeliveryCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultTtlAsIso8601: {\n        serializedName: \"defaultTtlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      feedback: {\n        serializedName: \"feedback\",\n        type: {\n          name: \"Composite\",\n          className: \"FeedbackProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const FeedbackProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FeedbackProperties\",\n    modelProperties: {\n      lockDurationAsIso8601: {\n        serializedName: \"lockDurationAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      ttlAsIso8601: {\n        serializedName: \"ttlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      maxDeliveryCount: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"maxDeliveryCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubLocationDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubLocationDescription\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"role\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubSkuInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubSkuInfo\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Free\", \"Standard\", \"Basic\"]\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ArmIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ArmIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"UserAssigned\",\n            \"SystemAssigned, UserAssigned\",\n            \"None\"\n          ]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"ArmUserIdentity\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ArmUserIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ArmUserIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$\")\n        },\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const TagsResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsResource\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubDescriptionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubDescriptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubDescription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegistryStatistics: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegistryStatistics\",\n    modelProperties: {\n      totalDeviceCount: {\n        serializedName: \"totalDeviceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabledDeviceCount: {\n        serializedName: \"enabledDeviceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      disabledDeviceCount: {\n        serializedName: \"disabledDeviceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubSkuDescriptionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubSkuDescriptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubSkuDescription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubSkuDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubSkuDescription\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubSkuInfo\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubCapacity\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubCapacity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubCapacity\",\n    modelProperties: {\n      minimum: {\n        constraints: {\n          InclusiveMaximum: 1,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"minimum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      default: {\n        serializedName: \"default\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      scaleType: {\n        serializedName: \"scaleType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Automatic\", \"Manual\", \"None\"]\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EventHubConsumerGroupInfo\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupInfo\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupBodyDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupBodyDescription\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"EventHubConsumerGroupName\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupName\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobResponseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobResponseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobResponse\",\n    modelProperties: {\n      jobId: {\n        serializedName: \"jobId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTimeUtc: {\n        serializedName: \"startTimeUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      endTimeUtc: {\n        serializedName: \"endTimeUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"enqueued\",\n            \"running\",\n            \"completed\",\n            \"failed\",\n            \"cancelled\"\n          ]\n        }\n      },\n      failureReason: {\n        serializedName: \"failureReason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        serializedName: \"statusMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parentJobId: {\n        serializedName: \"parentJobId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubQuotaMetricInfoListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubQuotaMetricInfoListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubQuotaMetricInfo\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubQuotaMetricInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubQuotaMetricInfo\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxValue: {\n        serializedName: \"maxValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointHealthDataListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointHealthDataListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EndpointHealthData\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointHealthData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointHealthData\",\n    modelProperties: {\n      endpointId: {\n        serializedName: \"endpointId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      healthStatus: {\n        serializedName: \"healthStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastKnownError: {\n        serializedName: \"lastKnownError\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastKnownErrorTime: {\n        serializedName: \"lastKnownErrorTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastSuccessfulSendAttemptTime: {\n        serializedName: \"lastSuccessfulSendAttemptTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastSendAttemptTime: {\n        serializedName: \"lastSendAttemptTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationInputs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationInputs\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubNameAvailabilityInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubNameAvailabilityInfo\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Invalid\", \"AlreadyExists\"]\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserSubscriptionQuotaListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserSubscriptionQuotaListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UserSubscriptionQuota\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserSubscriptionQuota: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserSubscriptionQuota\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"Name\"\n        }\n      }\n    }\n  }\n};\n\nexport const Name: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Name\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestAllRoutesInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestAllRoutesInput\",\n    modelProperties: {\n      routingSource: {\n        serializedName: \"routingSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingMessage\"\n        }\n      },\n      twin: {\n        serializedName: \"twin\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingTwin\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingMessage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingMessage\",\n    modelProperties: {\n      body: {\n        serializedName: \"body\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appProperties: {\n        serializedName: \"appProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      systemProperties: {\n        serializedName: \"systemProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingTwin: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingTwin\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingTwinProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingTwinProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingTwinProperties\",\n    modelProperties: {\n      desired: {\n        serializedName: \"desired\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      reported: {\n        serializedName: \"reported\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const TestAllRoutesResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestAllRoutesResult\",\n    modelProperties: {\n      routes: {\n        serializedName: \"routes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MatchedRoute\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MatchedRoute: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MatchedRoute\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestRouteInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestRouteInput\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingMessage\"\n        }\n      },\n      route: {\n        serializedName: \"route\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteProperties\"\n        }\n      },\n      twin: {\n        serializedName: \"twin\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingTwin\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestRouteResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestRouteResult\",\n    modelProperties: {\n      result: {\n        serializedName: \"result\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Composite\",\n          className: \"TestRouteResultDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestRouteResultDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestRouteResultDetails\",\n    modelProperties: {\n      compilationErrors: {\n        serializedName: \"compilationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RouteCompilationError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RouteCompilationError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteCompilationError\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      severity: {\n        serializedName: \"severity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteErrorRange\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteErrorRange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteErrorRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"start\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteErrorPosition\"\n        }\n      },\n      end: {\n        serializedName: \"end\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteErrorPosition\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteErrorPosition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RouteErrorPosition\",\n    modelProperties: {\n      line: {\n        serializedName: \"line\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      column: {\n        serializedName: \"column\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessSignatureAuthorizationRuleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessSignatureAuthorizationRuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessSignatureAuthorizationRule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportDevicesRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportDevicesRequest\",\n    modelProperties: {\n      exportBlobContainerUri: {\n        serializedName: \"exportBlobContainerUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      excludeKeys: {\n        serializedName: \"excludeKeys\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      exportBlobName: {\n        serializedName: \"exportBlobName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      includeConfigurations: {\n        serializedName: \"includeConfigurations\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      configurationsBlobName: {\n        serializedName: \"configurationsBlobName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImportDevicesRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImportDevicesRequest\",\n    modelProperties: {\n      inputBlobContainerUri: {\n        serializedName: \"inputBlobContainerUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      outputBlobContainerUri: {\n        serializedName: \"outputBlobContainerUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      inputBlobName: {\n        serializedName: \"inputBlobName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputBlobName: {\n        serializedName: \"outputBlobName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      includeConfigurations: {\n        serializedName: \"includeConfigurations\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      configurationsBlobName: {\n        serializedName: \"configurationsBlobName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateListDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateListDescription\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CertificateDescription\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateDescription\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CertificateProperties\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateProperties\",\n    modelProperties: {\n      subject: {\n        serializedName: \"subject\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiry: {\n        serializedName: \"expiry\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isVerified: {\n        serializedName: \"isVerified\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      created: {\n        serializedName: \"created\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      updated: {\n        serializedName: \"updated\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateWithNonceDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateWithNonceDescription\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CertificatePropertiesWithNonce\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificatePropertiesWithNonce: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificatePropertiesWithNonce\",\n    modelProperties: {\n      subject: {\n        serializedName: \"subject\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiry: {\n        serializedName: \"expiry\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isVerified: {\n        serializedName: \"isVerified\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      created: {\n        serializedName: \"created\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      updated: {\n        serializedName: \"updated\",\n        readOnly: true,\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      verificationCode: {\n        serializedName: \"verificationCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      certificate: {\n        serializedName: \"certificate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateVerificationDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateVerificationDescription\",\n    modelProperties: {\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FailoverInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FailoverInput\",\n    modelProperties: {\n      failoverRegion: {\n        serializedName: \"failoverRegion\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResources: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResources\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GroupIdInformation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GroupIdInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GroupIdInformation\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"GroupIdInformationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const GroupIdInformationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GroupIdInformationProperties\",\n    modelProperties: {\n      groupId: {\n        serializedName: \"groupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"requiredMembers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateBodyDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateBodyDescription\",\n    modelProperties: {\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isVerified: {\n        serializedName: \"isVerified\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IotHubDescription\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubSkuInfo\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ArmIdentity\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  IotHubDescription as IotHubDescriptionMapper,\n  TagsResource as TagsResourceMapper,\n  EventHubConsumerGroupBodyDescription as EventHubConsumerGroupBodyDescriptionMapper,\n  OperationInputs as OperationInputsMapper,\n  TestAllRoutesInput as TestAllRoutesInputMapper,\n  TestRouteInput as TestRouteInputMapper,\n  ExportDevicesRequest as ExportDevicesRequestMapper,\n  ImportDevicesRequest as ImportDevicesRequestMapper,\n  CertificateDescription as CertificateDescriptionMapper,\n  CertificateVerificationDescription as CertificateVerificationDescriptionMapper,\n  FailoverInput as FailoverInputMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-07-02\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceName: OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    serializedName: \"resourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const iotHubDescription: OperationParameter = {\n  parameterPath: \"iotHubDescription\",\n  mapper: IotHubDescriptionMapper\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const iotHubTags: OperationParameter = {\n  parameterPath: \"iotHubTags\",\n  mapper: TagsResourceMapper\n};\n\nexport const eventHubEndpointName: OperationURLParameter = {\n  parameterPath: \"eventHubEndpointName\",\n  mapper: {\n    serializedName: \"eventHubEndpointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const consumerGroupBody: OperationParameter = {\n  parameterPath: \"consumerGroupBody\",\n  mapper: EventHubConsumerGroupBodyDescriptionMapper\n};\n\nexport const jobId: OperationURLParameter = {\n  parameterPath: \"jobId\",\n  mapper: {\n    serializedName: \"jobId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const iotHubName: OperationURLParameter = {\n  parameterPath: \"iotHubName\",\n  mapper: {\n    serializedName: \"iotHubName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const operationInputs: OperationParameter = {\n  parameterPath: \"operationInputs\",\n  mapper: OperationInputsMapper\n};\n\nexport const input: OperationParameter = {\n  parameterPath: \"input\",\n  mapper: TestAllRoutesInputMapper\n};\n\nexport const input1: OperationParameter = {\n  parameterPath: \"input\",\n  mapper: TestRouteInputMapper\n};\n\nexport const keyName: OperationURLParameter = {\n  parameterPath: \"keyName\",\n  mapper: {\n    serializedName: \"keyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const exportDevicesParameters: OperationParameter = {\n  parameterPath: \"exportDevicesParameters\",\n  mapper: ExportDevicesRequestMapper\n};\n\nexport const importDevicesParameters: OperationParameter = {\n  parameterPath: \"importDevicesParameters\",\n  mapper: ImportDevicesRequestMapper\n};\n\nexport const certificateName: OperationURLParameter = {\n  parameterPath: \"certificateName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z0-9-._]{1,64}$\")\n    },\n    serializedName: \"certificateName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificateDescription: OperationParameter = {\n  parameterPath: \"certificateDescription\",\n  mapper: CertificateDescriptionMapper\n};\n\nexport const ifMatch1: OperationParameter = {\n  parameterPath: \"ifMatch\",\n  mapper: {\n    serializedName: \"If-Match\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificateVerificationBody: OperationParameter = {\n  parameterPath: \"certificateVerificationBody\",\n  mapper: CertificateVerificationDescriptionMapper\n};\n\nexport const failoverInput: OperationParameter = {\n  parameterPath: \"failoverInput\",\n  mapper: FailoverInputMapper\n};\n\nexport const groupId: OperationURLParameter = {\n  parameterPath: \"groupId\",\n  mapper: {\n    serializedName: \"groupId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateEndpointConnection: OperationParameter = {\n  parameterPath: \"privateEndpointConnection\",\n  mapper: PrivateEndpointConnectionMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClient } from \"../iotHubClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: IotHubClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available IoT Hub REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available IoT Hub REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Devices/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { IotHubResource } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClient } from \"../iotHubClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  IotHubDescription,\n  IotHubResourceListBySubscriptionNextOptionalParams,\n  IotHubResourceListBySubscriptionOptionalParams,\n  IotHubResourceListByResourceGroupNextOptionalParams,\n  IotHubResourceListByResourceGroupOptionalParams,\n  IotHubSkuDescription,\n  IotHubResourceGetValidSkusNextOptionalParams,\n  IotHubResourceGetValidSkusOptionalParams,\n  EventHubConsumerGroupInfo,\n  IotHubResourceListEventHubConsumerGroupsNextOptionalParams,\n  IotHubResourceListEventHubConsumerGroupsOptionalParams,\n  JobResponse,\n  IotHubResourceListJobsNextOptionalParams,\n  IotHubResourceListJobsOptionalParams,\n  IotHubQuotaMetricInfo,\n  IotHubResourceGetQuotaMetricsNextOptionalParams,\n  IotHubResourceGetQuotaMetricsOptionalParams,\n  EndpointHealthData,\n  IotHubResourceGetEndpointHealthNextOptionalParams,\n  IotHubResourceGetEndpointHealthOptionalParams,\n  SharedAccessSignatureAuthorizationRule,\n  IotHubResourceListKeysNextOptionalParams,\n  IotHubResourceListKeysOptionalParams,\n  IotHubResourceGetOptionalParams,\n  IotHubResourceGetResponse,\n  IotHubResourceCreateOrUpdateOptionalParams,\n  IotHubResourceCreateOrUpdateResponse,\n  TagsResource,\n  IotHubResourceUpdateOptionalParams,\n  IotHubResourceUpdateResponse,\n  IotHubResourceDeleteOptionalParams,\n  IotHubResourceDeleteResponse,\n  IotHubResourceListBySubscriptionResponse,\n  IotHubResourceListByResourceGroupResponse,\n  IotHubResourceGetStatsOptionalParams,\n  IotHubResourceGetStatsResponse,\n  IotHubResourceGetValidSkusResponse,\n  IotHubResourceListEventHubConsumerGroupsResponse,\n  IotHubResourceGetEventHubConsumerGroupOptionalParams,\n  IotHubResourceGetEventHubConsumerGroupResponse,\n  EventHubConsumerGroupBodyDescription,\n  IotHubResourceCreateEventHubConsumerGroupOptionalParams,\n  IotHubResourceCreateEventHubConsumerGroupResponse,\n  IotHubResourceDeleteEventHubConsumerGroupOptionalParams,\n  IotHubResourceListJobsResponse,\n  IotHubResourceGetJobOptionalParams,\n  IotHubResourceGetJobResponse,\n  IotHubResourceGetQuotaMetricsResponse,\n  IotHubResourceGetEndpointHealthResponse,\n  OperationInputs,\n  IotHubResourceCheckNameAvailabilityOptionalParams,\n  IotHubResourceCheckNameAvailabilityResponse,\n  TestAllRoutesInput,\n  IotHubResourceTestAllRoutesOptionalParams,\n  IotHubResourceTestAllRoutesResponse,\n  TestRouteInput,\n  IotHubResourceTestRouteOptionalParams,\n  IotHubResourceTestRouteResponse,\n  IotHubResourceListKeysResponse,\n  IotHubResourceGetKeysForKeyNameOptionalParams,\n  IotHubResourceGetKeysForKeyNameResponse,\n  ExportDevicesRequest,\n  IotHubResourceExportDevicesOptionalParams,\n  IotHubResourceExportDevicesResponse,\n  ImportDevicesRequest,\n  IotHubResourceImportDevicesOptionalParams,\n  IotHubResourceImportDevicesResponse,\n  IotHubResourceListBySubscriptionNextResponse,\n  IotHubResourceListByResourceGroupNextResponse,\n  IotHubResourceGetValidSkusNextResponse,\n  IotHubResourceListEventHubConsumerGroupsNextResponse,\n  IotHubResourceListJobsNextResponse,\n  IotHubResourceGetQuotaMetricsNextResponse,\n  IotHubResourceGetEndpointHealthNextResponse,\n  IotHubResourceListKeysNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing IotHubResource operations. */\nexport class IotHubResourceImpl implements IotHubResource {\n  private readonly client: IotHubClient;\n\n  /**\n   * Initialize a new instance of the class IotHubResource class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all the IoT hubs in a subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: IotHubResourceListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<IotHubDescription> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: IotHubResourceListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<IotHubDescription[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: IotHubResourceListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<IotHubDescription> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the IoT hubs in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: IotHubResourceListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<IotHubDescription> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: IotHubResourceListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<IotHubDescription[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: IotHubResourceListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<IotHubDescription> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the list of valid SKUs for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  public listValidSkus(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetValidSkusOptionalParams\n  ): PagedAsyncIterableIterator<IotHubSkuDescription> {\n    const iter = this.getValidSkusPagingAll(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getValidSkusPagingPage(\n          resourceGroupName,\n          resourceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *getValidSkusPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetValidSkusOptionalParams\n  ): AsyncIterableIterator<IotHubSkuDescription[]> {\n    let result = await this._getValidSkus(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getValidSkusNext(\n        resourceGroupName,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getValidSkusPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetValidSkusOptionalParams\n  ): AsyncIterableIterator<IotHubSkuDescription> {\n    for await (const page of this.getValidSkusPagingPage(\n      resourceGroupName,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT\n   * hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.\n   * @param options The options parameters.\n   */\n  public listEventHubConsumerGroups(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    options?: IotHubResourceListEventHubConsumerGroupsOptionalParams\n  ): PagedAsyncIterableIterator<EventHubConsumerGroupInfo> {\n    const iter = this.listEventHubConsumerGroupsPagingAll(\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listEventHubConsumerGroupsPagingPage(\n          resourceGroupName,\n          resourceName,\n          eventHubEndpointName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listEventHubConsumerGroupsPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    options?: IotHubResourceListEventHubConsumerGroupsOptionalParams\n  ): AsyncIterableIterator<EventHubConsumerGroupInfo[]> {\n    let result = await this._listEventHubConsumerGroups(\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listEventHubConsumerGroupsNext(\n        resourceGroupName,\n        resourceName,\n        eventHubEndpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listEventHubConsumerGroupsPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    options?: IotHubResourceListEventHubConsumerGroupsOptionalParams\n  ): AsyncIterableIterator<EventHubConsumerGroupInfo> {\n    for await (const page of this.listEventHubConsumerGroupsPagingPage(\n      resourceGroupName,\n      resourceName,\n      eventHubEndpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a list of all the jobs in an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  public listJobs(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceListJobsOptionalParams\n  ): PagedAsyncIterableIterator<JobResponse> {\n    const iter = this.listJobsPagingAll(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listJobsPagingPage(\n          resourceGroupName,\n          resourceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listJobsPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceListJobsOptionalParams\n  ): AsyncIterableIterator<JobResponse[]> {\n    let result = await this._listJobs(resourceGroupName, resourceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listJobsNext(\n        resourceGroupName,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listJobsPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceListJobsOptionalParams\n  ): AsyncIterableIterator<JobResponse> {\n    for await (const page of this.listJobsPagingPage(\n      resourceGroupName,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the quota metrics for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  public listQuotaMetrics(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetQuotaMetricsOptionalParams\n  ): PagedAsyncIterableIterator<IotHubQuotaMetricInfo> {\n    const iter = this.getQuotaMetricsPagingAll(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getQuotaMetricsPagingPage(\n          resourceGroupName,\n          resourceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *getQuotaMetricsPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetQuotaMetricsOptionalParams\n  ): AsyncIterableIterator<IotHubQuotaMetricInfo[]> {\n    let result = await this._getQuotaMetrics(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getQuotaMetricsNext(\n        resourceGroupName,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getQuotaMetricsPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetQuotaMetricsOptionalParams\n  ): AsyncIterableIterator<IotHubQuotaMetricInfo> {\n    for await (const page of this.getQuotaMetricsPagingPage(\n      resourceGroupName,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the health for routing endpoints.\n   * @param resourceGroupName\n   * @param iotHubName\n   * @param options The options parameters.\n   */\n  public listEndpointHealth(\n    resourceGroupName: string,\n    iotHubName: string,\n    options?: IotHubResourceGetEndpointHealthOptionalParams\n  ): PagedAsyncIterableIterator<EndpointHealthData> {\n    const iter = this.getEndpointHealthPagingAll(\n      resourceGroupName,\n      iotHubName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getEndpointHealthPagingPage(\n          resourceGroupName,\n          iotHubName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *getEndpointHealthPagingPage(\n    resourceGroupName: string,\n    iotHubName: string,\n    options?: IotHubResourceGetEndpointHealthOptionalParams\n  ): AsyncIterableIterator<EndpointHealthData[]> {\n    let result = await this._getEndpointHealth(\n      resourceGroupName,\n      iotHubName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getEndpointHealthNext(\n        resourceGroupName,\n        iotHubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getEndpointHealthPagingAll(\n    resourceGroupName: string,\n    iotHubName: string,\n    options?: IotHubResourceGetEndpointHealthOptionalParams\n  ): AsyncIterableIterator<EndpointHealthData> {\n    for await (const page of this.getEndpointHealthPagingPage(\n      resourceGroupName,\n      iotHubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the security metadata for an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  public listKeys(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceListKeysOptionalParams\n  ): PagedAsyncIterableIterator<SharedAccessSignatureAuthorizationRule> {\n    const iter = this.listKeysPagingAll(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listKeysPagingPage(\n          resourceGroupName,\n          resourceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listKeysPagingPage(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceListKeysOptionalParams\n  ): AsyncIterableIterator<SharedAccessSignatureAuthorizationRule[]> {\n    let result = await this._listKeys(resourceGroupName, resourceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listKeysNext(\n        resourceGroupName,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listKeysPagingAll(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceListKeysOptionalParams\n  ): AsyncIterableIterator<SharedAccessSignatureAuthorizationRule> {\n    for await (const page of this.listKeysPagingPage(\n      resourceGroupName,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the non-security related metadata of an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetOptionalParams\n  ): Promise<IotHubResourceGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update the metadata of an Iot hub. The usual pattern to modify a property is to retrieve\n   * the IoT hub metadata and security metadata, and then combine them with the modified values in a new\n   * body to update the IoT hub. If certain properties are missing in the JSON, updating IoT Hub may\n   * cause these values to fallback to default, which may lead to unexpected behavior.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param iotHubDescription The IoT hub metadata and security metadata.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    resourceName: string,\n    iotHubDescription: IotHubDescription,\n    options?: IotHubResourceCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IotHubResourceCreateOrUpdateResponse>,\n      IotHubResourceCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IotHubResourceCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, resourceName, iotHubDescription, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update the metadata of an Iot hub. The usual pattern to modify a property is to retrieve\n   * the IoT hub metadata and security metadata, and then combine them with the modified values in a new\n   * body to update the IoT hub. If certain properties are missing in the JSON, updating IoT Hub may\n   * cause these values to fallback to default, which may lead to unexpected behavior.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param iotHubDescription The IoT hub metadata and security metadata.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    iotHubDescription: IotHubDescription,\n    options?: IotHubResourceCreateOrUpdateOptionalParams\n  ): Promise<IotHubResourceCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      resourceName,\n      iotHubDescription,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method\n   * @param resourceGroupName Resource group identifier.\n   * @param resourceName Name of iot hub to update.\n   * @param iotHubTags Updated tag information to set into the iot hub instance.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    resourceName: string,\n    iotHubTags: TagsResource,\n    options?: IotHubResourceUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IotHubResourceUpdateResponse>,\n      IotHubResourceUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IotHubResourceUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, resourceName, iotHubTags, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method\n   * @param resourceGroupName Resource group identifier.\n   * @param resourceName Name of iot hub to update.\n   * @param iotHubTags Updated tag information to set into the iot hub instance.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    iotHubTags: TagsResource,\n    options?: IotHubResourceUpdateOptionalParams\n  ): Promise<IotHubResourceUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      resourceName,\n      iotHubTags,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceDeleteOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IotHubResourceDeleteResponse>,\n      IotHubResourceDeleteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IotHubResourceDeleteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, resourceName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceDeleteOptionalParams\n  ): Promise<IotHubResourceDeleteResponse> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      resourceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get all the IoT hubs in a subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: IotHubResourceListBySubscriptionOptionalParams\n  ): Promise<IotHubResourceListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Get all the IoT hubs in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: IotHubResourceListByResourceGroupOptionalParams\n  ): Promise<IotHubResourceListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Get the statistics from an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  getStats(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetStatsOptionalParams\n  ): Promise<IotHubResourceGetStatsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      getStatsOperationSpec\n    );\n  }\n\n  /**\n   * Get the list of valid SKUs for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  private _getValidSkus(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetValidSkusOptionalParams\n  ): Promise<IotHubResourceGetValidSkusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      getValidSkusOperationSpec\n    );\n  }\n\n  /**\n   * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT\n   * hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.\n   * @param options The options parameters.\n   */\n  private _listEventHubConsumerGroups(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    options?: IotHubResourceListEventHubConsumerGroupsOptionalParams\n  ): Promise<IotHubResourceListEventHubConsumerGroupsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, eventHubEndpointName, options },\n      listEventHubConsumerGroupsOperationSpec\n    );\n  }\n\n  /**\n   * Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to retrieve.\n   * @param options The options parameters.\n   */\n  getEventHubConsumerGroup(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    name: string,\n    options?: IotHubResourceGetEventHubConsumerGroupOptionalParams\n  ): Promise<IotHubResourceGetEventHubConsumerGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, eventHubEndpointName, name, options },\n      getEventHubConsumerGroupOperationSpec\n    );\n  }\n\n  /**\n   * Add a consumer group to an Event Hub-compatible endpoint in an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to add.\n   * @param consumerGroupBody The consumer group to add.\n   * @param options The options parameters.\n   */\n  createEventHubConsumerGroup(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    name: string,\n    consumerGroupBody: EventHubConsumerGroupBodyDescription,\n    options?: IotHubResourceCreateEventHubConsumerGroupOptionalParams\n  ): Promise<IotHubResourceCreateEventHubConsumerGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        eventHubEndpointName,\n        name,\n        consumerGroupBody,\n        options\n      },\n      createEventHubConsumerGroupOperationSpec\n    );\n  }\n\n  /**\n   * Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to delete.\n   * @param options The options parameters.\n   */\n  deleteEventHubConsumerGroup(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    name: string,\n    options?: IotHubResourceDeleteEventHubConsumerGroupOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, eventHubEndpointName, name, options },\n      deleteEventHubConsumerGroupOperationSpec\n    );\n  }\n\n  /**\n   * Get a list of all the jobs in an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  private _listJobs(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceListJobsOptionalParams\n  ): Promise<IotHubResourceListJobsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      listJobsOperationSpec\n    );\n  }\n\n  /**\n   * Get the details of a job from an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param jobId The job identifier.\n   * @param options The options parameters.\n   */\n  getJob(\n    resourceGroupName: string,\n    resourceName: string,\n    jobId: string,\n    options?: IotHubResourceGetJobOptionalParams\n  ): Promise<IotHubResourceGetJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, jobId, options },\n      getJobOperationSpec\n    );\n  }\n\n  /**\n   * Get the quota metrics for an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  private _getQuotaMetrics(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceGetQuotaMetricsOptionalParams\n  ): Promise<IotHubResourceGetQuotaMetricsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      getQuotaMetricsOperationSpec\n    );\n  }\n\n  /**\n   * Get the health for routing endpoints.\n   * @param resourceGroupName\n   * @param iotHubName\n   * @param options The options parameters.\n   */\n  private _getEndpointHealth(\n    resourceGroupName: string,\n    iotHubName: string,\n    options?: IotHubResourceGetEndpointHealthOptionalParams\n  ): Promise<IotHubResourceGetEndpointHealthResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, iotHubName, options },\n      getEndpointHealthOperationSpec\n    );\n  }\n\n  /**\n   * Check if an IoT hub name is available.\n   * @param operationInputs Set the name parameter in the OperationInputs structure to the name of the\n   *                        IoT hub to check.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    operationInputs: OperationInputs,\n    options?: IotHubResourceCheckNameAvailabilityOptionalParams\n  ): Promise<IotHubResourceCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { operationInputs, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Test all routes configured in this Iot Hub\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param input Input for testing all routes\n   * @param options The options parameters.\n   */\n  testAllRoutes(\n    iotHubName: string,\n    resourceGroupName: string,\n    input: TestAllRoutesInput,\n    options?: IotHubResourceTestAllRoutesOptionalParams\n  ): Promise<IotHubResourceTestAllRoutesResponse> {\n    return this.client.sendOperationRequest(\n      { iotHubName, resourceGroupName, input, options },\n      testAllRoutesOperationSpec\n    );\n  }\n\n  /**\n   * Test the new route for this Iot Hub\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param input Route that needs to be tested\n   * @param options The options parameters.\n   */\n  testRoute(\n    iotHubName: string,\n    resourceGroupName: string,\n    input: TestRouteInput,\n    options?: IotHubResourceTestRouteOptionalParams\n  ): Promise<IotHubResourceTestRouteResponse> {\n    return this.client.sendOperationRequest(\n      { iotHubName, resourceGroupName, input, options },\n      testRouteOperationSpec\n    );\n  }\n\n  /**\n   * Get the security metadata for an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  private _listKeys(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: IotHubResourceListKeysOptionalParams\n  ): Promise<IotHubResourceListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Get a shared access policy by name from an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param keyName The name of the shared access policy.\n   * @param options The options parameters.\n   */\n  getKeysForKeyName(\n    resourceGroupName: string,\n    resourceName: string,\n    keyName: string,\n    options?: IotHubResourceGetKeysForKeyNameOptionalParams\n  ): Promise<IotHubResourceGetKeysForKeyNameResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, keyName, options },\n      getKeysForKeyNameOperationSpec\n    );\n  }\n\n  /**\n   * Exports all the device identities in the IoT hub identity registry to an Azure Storage blob\n   * container. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param exportDevicesParameters The parameters that specify the export devices operation.\n   * @param options The options parameters.\n   */\n  exportDevices(\n    resourceGroupName: string,\n    resourceName: string,\n    exportDevicesParameters: ExportDevicesRequest,\n    options?: IotHubResourceExportDevicesOptionalParams\n  ): Promise<IotHubResourceExportDevicesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, exportDevicesParameters, options },\n      exportDevicesOperationSpec\n    );\n  }\n\n  /**\n   * Import, update, or delete device identities in the IoT hub identity registry from a blob. For more\n   * information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param importDevicesParameters The parameters that specify the import devices operation.\n   * @param options The options parameters.\n   */\n  importDevices(\n    resourceGroupName: string,\n    resourceName: string,\n    importDevicesParameters: ImportDevicesRequest,\n    options?: IotHubResourceImportDevicesOptionalParams\n  ): Promise<IotHubResourceImportDevicesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, importDevicesParameters, options },\n      importDevicesOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: IotHubResourceListBySubscriptionNextOptionalParams\n  ): Promise<IotHubResourceListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: IotHubResourceListByResourceGroupNextOptionalParams\n  ): Promise<IotHubResourceListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * GetValidSkusNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the GetValidSkus method.\n   * @param options The options parameters.\n   */\n  private _getValidSkusNext(\n    resourceGroupName: string,\n    resourceName: string,\n    nextLink: string,\n    options?: IotHubResourceGetValidSkusNextOptionalParams\n  ): Promise<IotHubResourceGetValidSkusNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, nextLink, options },\n      getValidSkusNextOperationSpec\n    );\n  }\n\n  /**\n   * ListEventHubConsumerGroupsNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.\n   * @param nextLink The nextLink from the previous successful call to the ListEventHubConsumerGroups\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listEventHubConsumerGroupsNext(\n    resourceGroupName: string,\n    resourceName: string,\n    eventHubEndpointName: string,\n    nextLink: string,\n    options?: IotHubResourceListEventHubConsumerGroupsNextOptionalParams\n  ): Promise<IotHubResourceListEventHubConsumerGroupsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        eventHubEndpointName,\n        nextLink,\n        options\n      },\n      listEventHubConsumerGroupsNextOperationSpec\n    );\n  }\n\n  /**\n   * ListJobsNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the ListJobs method.\n   * @param options The options parameters.\n   */\n  private _listJobsNext(\n    resourceGroupName: string,\n    resourceName: string,\n    nextLink: string,\n    options?: IotHubResourceListJobsNextOptionalParams\n  ): Promise<IotHubResourceListJobsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, nextLink, options },\n      listJobsNextOperationSpec\n    );\n  }\n\n  /**\n   * GetQuotaMetricsNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the GetQuotaMetrics method.\n   * @param options The options parameters.\n   */\n  private _getQuotaMetricsNext(\n    resourceGroupName: string,\n    resourceName: string,\n    nextLink: string,\n    options?: IotHubResourceGetQuotaMetricsNextOptionalParams\n  ): Promise<IotHubResourceGetQuotaMetricsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, nextLink, options },\n      getQuotaMetricsNextOperationSpec\n    );\n  }\n\n  /**\n   * GetEndpointHealthNext\n   * @param resourceGroupName\n   * @param iotHubName\n   * @param nextLink The nextLink from the previous successful call to the GetEndpointHealth method.\n   * @param options The options parameters.\n   */\n  private _getEndpointHealthNext(\n    resourceGroupName: string,\n    iotHubName: string,\n    nextLink: string,\n    options?: IotHubResourceGetEndpointHealthNextOptionalParams\n  ): Promise<IotHubResourceGetEndpointHealthNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, iotHubName, nextLink, options },\n      getEndpointHealthNextOperationSpec\n    );\n  }\n\n  /**\n   * ListKeysNext\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param nextLink The nextLink from the previous successful call to the ListKeys method.\n   * @param options The options parameters.\n   */\n  private _listKeysNext(\n    resourceGroupName: string,\n    resourceName: string,\n    nextLink: string,\n    options?: IotHubResourceListKeysNextOptionalParams\n  ): Promise<IotHubResourceListKeysNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, nextLink, options },\n      listKeysNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    201: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    202: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    204: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.iotHubDescription,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    201: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    202: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    204: {\n      bodyMapper: Mappers.IotHubDescription\n    }\n  },\n  requestBody: Parameters.iotHubTags,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    201: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    202: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    204: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Devices/IotHubs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getStatsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RegistryStatistics\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getValidSkusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubSkuDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listEventHubConsumerGroupsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getEventHubConsumerGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createEventHubConsumerGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.consumerGroupBody,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteEventHubConsumerGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listJobsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponseListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getJobOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.jobId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getQuotaMetricsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubQuotaMetricInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getEndpointHealthOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routingEndpointsHealth\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointHealthDataListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubNameAvailabilityInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.operationInputs,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst testAllRoutesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testall\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TestAllRoutesResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst testRouteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testnew\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TestRouteResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.input1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/listkeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessSignatureAuthorizationRuleListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeysForKeyNameOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubKeys/{keyName}/listkeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessSignatureAuthorizationRule\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst exportDevicesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/exportDevices\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.exportDevicesParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst importDevicesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.importDevicesParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getValidSkusNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubSkuDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listEventHubConsumerGroupsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listJobsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponseListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getQuotaMetricsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubQuotaMetricInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getEndpointHealthNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointHealthDataListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listKeysNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessSignatureAuthorizationRuleListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ResourceProviderCommon } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClient } from \"../iotHubClient\";\nimport {\n  ResourceProviderCommonGetSubscriptionQuotaOptionalParams,\n  ResourceProviderCommonGetSubscriptionQuotaResponse\n} from \"../models\";\n\n/** Class containing ResourceProviderCommon operations. */\nexport class ResourceProviderCommonImpl implements ResourceProviderCommon {\n  private readonly client: IotHubClient;\n\n  /**\n   * Initialize a new instance of the class ResourceProviderCommon class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the number of free and paid iot hubs in the subscription\n   * @param options The options parameters.\n   */\n  getSubscriptionQuota(\n    options?: ResourceProviderCommonGetSubscriptionQuotaOptionalParams\n  ): Promise<ResourceProviderCommonGetSubscriptionQuotaResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getSubscriptionQuotaOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getSubscriptionQuotaOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Devices/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserSubscriptionQuotaListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Certificates } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClient } from \"../iotHubClient\";\nimport {\n  CertificatesListByIotHubOptionalParams,\n  CertificatesListByIotHubResponse,\n  CertificatesGetOptionalParams,\n  CertificatesGetResponse,\n  CertificateDescription,\n  CertificatesCreateOrUpdateOptionalParams,\n  CertificatesCreateOrUpdateResponse,\n  CertificatesDeleteOptionalParams,\n  CertificatesGenerateVerificationCodeOptionalParams,\n  CertificatesGenerateVerificationCodeResponse,\n  CertificateVerificationDescription,\n  CertificatesVerifyOptionalParams,\n  CertificatesVerifyResponse\n} from \"../models\";\n\n/** Class containing Certificates operations. */\nexport class CertificatesImpl implements Certificates {\n  private readonly client: IotHubClient;\n\n  /**\n   * Initialize a new instance of the class Certificates class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the list of certificates.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  listByIotHub(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: CertificatesListByIotHubOptionalParams\n  ): Promise<CertificatesListByIotHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      listByIotHubOperationSpec\n    );\n  }\n\n  /**\n   * Returns the certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    options?: CertificatesGetOptionalParams\n  ): Promise<CertificatesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, certificateName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Adds new or replaces existing certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param certificateDescription The certificate body.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    certificateDescription: CertificateDescription,\n    options?: CertificatesCreateOrUpdateOptionalParams\n  ): Promise<CertificatesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        certificateName,\n        certificateDescription,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing X509 certificate or does nothing if it does not exist.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    ifMatch: string,\n    options?: CertificatesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, certificateName, ifMatch, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Generates verification code for proof of possession flow. The verification code will be used to\n   * generate a leaf certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param options The options parameters.\n   */\n  generateVerificationCode(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    ifMatch: string,\n    options?: CertificatesGenerateVerificationCodeOptionalParams\n  ): Promise<CertificatesGenerateVerificationCodeResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, certificateName, ifMatch, options },\n      generateVerificationCodeOperationSpec\n    );\n  }\n\n  /**\n   * Verifies the certificate's private key possession by providing the leaf cert issued by the verifying\n   * pre uploaded certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param certificateVerificationBody The name of the certificate\n   * @param options The options parameters.\n   */\n  verify(\n    resourceGroupName: string,\n    resourceName: string,\n    certificateName: string,\n    ifMatch: string,\n    certificateVerificationBody: CertificateVerificationDescription,\n    options?: CertificatesVerifyOptionalParams\n  ): Promise<CertificatesVerifyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        certificateName,\n        ifMatch,\n        certificateVerificationBody,\n        options\n      },\n      verifyOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByIotHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateListDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    201: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.certificateDescription,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.accept, Parameters.ifMatch1],\n  serializer\n};\nconst generateVerificationCodeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/generateVerificationCode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateWithNonceDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.accept, Parameters.ifMatch1],\n  serializer\n};\nconst verifyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/verify\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.certificateVerificationBody,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch1\n  ],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IotHub } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClient } from \"../iotHubClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport { FailoverInput, IotHubManualFailoverOptionalParams } from \"../models\";\n\n/** Class containing IotHub operations. */\nexport class IotHubImpl implements IotHub {\n  private readonly client: IotHubClient;\n\n  /**\n   * Initialize a new instance of the class IotHub class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClient) {\n    this.client = client;\n  }\n\n  /**\n   * Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see\n   * https://aka.ms/manualfailover\n   * @param iotHubName Name of the IoT hub to failover\n   * @param resourceGroupName Name of the resource group containing the IoT hub resource\n   * @param failoverInput Region to failover to. Must be the Azure paired region. Get the value from the\n   *                      secondary location in the locations property. To learn more, see\n   *                      https://aka.ms/manualfailover/region\n   * @param options The options parameters.\n   */\n  async beginManualFailover(\n    iotHubName: string,\n    resourceGroupName: string,\n    failoverInput: FailoverInput,\n    options?: IotHubManualFailoverOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { iotHubName, resourceGroupName, failoverInput, options },\n      manualFailoverOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see\n   * https://aka.ms/manualfailover\n   * @param iotHubName Name of the IoT hub to failover\n   * @param resourceGroupName Name of the resource group containing the IoT hub resource\n   * @param failoverInput Region to failover to. Must be the Azure paired region. Get the value from the\n   *                      secondary location in the locations property. To learn more, see\n   *                      https://aka.ms/manualfailover/region\n   * @param options The options parameters.\n   */\n  async beginManualFailoverAndWait(\n    iotHubName: string,\n    resourceGroupName: string,\n    failoverInput: FailoverInput,\n    options?: IotHubManualFailoverOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginManualFailover(\n      iotHubName,\n      resourceGroupName,\n      failoverInput,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst manualFailoverOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.failoverInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PrivateLinkResourcesOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClient } from \"../iotHubClient\";\nimport {\n  PrivateLinkResourcesListOptionalParams,\n  PrivateLinkResourcesListResponse,\n  PrivateLinkResourcesGetOptionalParams,\n  PrivateLinkResourcesGetResponse\n} from \"../models\";\n\n/** Class containing PrivateLinkResourcesOperations operations. */\nexport class PrivateLinkResourcesOperationsImpl\n  implements PrivateLinkResourcesOperations {\n  private readonly client: IotHubClient;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkResourcesOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClient) {\n    this.client = client;\n  }\n\n  /**\n   * List private link resources for the given IotHub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): Promise<PrivateLinkResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the specified private link resource for the given IotHub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param groupId The name of the private link resource\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    groupId: string,\n    options?: PrivateLinkResourcesGetOptionalParams\n  ): Promise<PrivateLinkResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, groupId, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResources\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/{groupId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GroupIdInformation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClient } from \"../iotHubClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  PrivateEndpointConnectionsListOptionalParams,\n  PrivateEndpointConnectionsListResponse,\n  PrivateEndpointConnectionsGetOptionalParams,\n  PrivateEndpointConnectionsGetResponse,\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionsUpdateOptionalParams,\n  PrivateEndpointConnectionsUpdateResponse,\n  PrivateEndpointConnectionsDeleteOptionalParams,\n  PrivateEndpointConnectionsDeleteResponse\n} from \"../models\";\n\n/** Class containing PrivateEndpointConnections operations. */\nexport class PrivateEndpointConnectionsImpl\n  implements PrivateEndpointConnections {\n  private readonly client: IotHubClient;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IotHubClient) {\n    this.client = client;\n  }\n\n  /**\n   * List private endpoint connection properties\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): Promise<PrivateEndpointConnectionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get private endpoint connection properties\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsGetOptionalParams\n  ): Promise<PrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        privateEndpointConnectionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update the status of a private endpoint connection with the specified name\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param privateEndpointConnection The private endpoint connection with updated properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    resourceName: string,\n    privateEndpointConnectionName: string,\n    privateEndpointConnection: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<PrivateEndpointConnectionsUpdateResponse>,\n      PrivateEndpointConnectionsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PrivateEndpointConnectionsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        resourceName,\n        privateEndpointConnectionName,\n        privateEndpointConnection,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update the status of a private endpoint connection with the specified name\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param privateEndpointConnection The private endpoint connection with updated properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    privateEndpointConnectionName: string,\n    privateEndpointConnection: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsUpdateOptionalParams\n  ): Promise<PrivateEndpointConnectionsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      resourceName,\n      privateEndpointConnectionName,\n      privateEndpointConnection,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete private endpoint connection with the specified name\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    resourceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<PrivateEndpointConnectionsDeleteResponse>,\n      PrivateEndpointConnectionsDeleteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PrivateEndpointConnectionsDeleteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        resourceName,\n        privateEndpointConnectionName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete private endpoint connection with the specified name\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    resourceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<PrivateEndpointConnectionsDeleteResponse> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      resourceName,\n      privateEndpointConnectionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"PrivateEndpointConnection\" }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  requestBody: Parameters.privateEndpointConnection,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  IotHubResourceImpl,\n  ResourceProviderCommonImpl,\n  CertificatesImpl,\n  IotHubImpl,\n  PrivateLinkResourcesOperationsImpl,\n  PrivateEndpointConnectionsImpl\n} from \"./operations\";\nimport {\n  Operations,\n  IotHubResource,\n  ResourceProviderCommon,\n  Certificates,\n  IotHub,\n  PrivateLinkResourcesOperations,\n  PrivateEndpointConnections\n} from \"./operationsInterfaces\";\nimport { IotHubClientOptionalParams } from \"./models\";\n\nexport class IotHubClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the IotHubClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The subscription identifier.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: IotHubClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: IotHubClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-iothub/6.2.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes: `${optionsWithDefaults.credentialScopes}`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2021-07-02\";\n    this.operations = new OperationsImpl(this);\n    this.iotHubResource = new IotHubResourceImpl(this);\n    this.resourceProviderCommon = new ResourceProviderCommonImpl(this);\n    this.certificates = new CertificatesImpl(this);\n    this.iotHub = new IotHubImpl(this);\n    this.privateLinkResourcesOperations = new PrivateLinkResourcesOperationsImpl(\n      this\n    );\n    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  iotHubResource: IotHubResource;\n  resourceProviderCommon: ResourceProviderCommon;\n  certificates: Certificates;\n  iotHub: IotHub;\n  privateLinkResourcesOperations: PrivateLinkResourcesOperations;\n  privateEndpointConnections: PrivateEndpointConnections;\n}\n"],"names":["KnownPublicNetworkAccess","KnownDefaultAction","KnownNetworkRuleIPAction","KnownPrivateLinkServiceConnectionStatus","KnownAuthenticationType","KnownRoutingStorageContainerPropertiesEncoding","KnownRoutingSource","KnownCapabilities","KnownIotHubReplicaRoleType","KnownIotHubSku","KnownCreatedByType","KnownJobType","KnownEndpointHealthStatus","KnownTestResultStatus","KnownRouteErrorSeverity","IotHubDescriptionMapper","TagsResourceMapper","EventHubConsumerGroupBodyDescriptionMapper","OperationInputsMapper","TestAllRoutesInputMapper","TestRouteInputMapper","ExportDevicesRequestMapper","ImportDevicesRequestMapper","CertificateDescriptionMapper","CertificateVerificationDescriptionMapper","FailoverInputMapper","PrivateEndpointConnectionMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","serializer","coreClient","Mappers.OperationListResult","Mappers.ErrorDetails","Parameters.apiVersion","Parameters.$host","Parameters.accept","Parameters.nextLink","__rest","getOperationSpec","__awaiter","createOrUpdateOperationSpec","LroEngine","updateOperationSpec","deleteOperationSpec","Mappers.IotHubDescription","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.resourceName","Parameters.iotHubDescription","Parameters.contentType","Parameters.ifMatch","Parameters.iotHubTags","Mappers.IotHubDescriptionListResult","Mappers.RegistryStatistics","Mappers.IotHubSkuDescriptionListResult","Mappers.EventHubConsumerGroupsListResult","Parameters.eventHubEndpointName","Mappers.EventHubConsumerGroupInfo","Parameters.name","Parameters.consumerGroupBody","Mappers.JobResponseListResult","Mappers.JobResponse","Parameters.jobId","Mappers.IotHubQuotaMetricInfoListResult","Mappers.EndpointHealthDataListResult","Parameters.iotHubName","Mappers.IotHubNameAvailabilityInfo","Parameters.operationInputs","Mappers.TestAllRoutesResult","Parameters.input","Mappers.TestRouteResult","Parameters.input1","Mappers.SharedAccessSignatureAuthorizationRuleListResult","Mappers.SharedAccessSignatureAuthorizationRule","Parameters.keyName","Parameters.exportDevicesParameters","Parameters.importDevicesParameters","Mappers.UserSubscriptionQuotaListResult","Mappers.CertificateListDescription","Mappers.CertificateDescription","Parameters.certificateName","Parameters.certificateDescription","Parameters.ifMatch1","Mappers.CertificateWithNonceDescription","Parameters.certificateVerificationBody","Parameters.failoverInput","Mappers.PrivateLinkResources","Mappers.GroupIdInformation","Parameters.groupId","Mappers.PrivateEndpointConnection","Parameters.privateEndpointConnectionName","Parameters.privateEndpointConnection","coreRestPipeline"],"mappings":"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"}